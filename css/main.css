/*! HTML5 Boilerplate v6.0.1 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */
@import url('https://fonts.googleapis.com/css?family=Open+Sans:300|Roboto:300');

html {
    color: #222;
    font-size: 1em;
    line-height: 1.4;
}

a {
    color: rgba(55,71,79,.4);
    text-decoration: none;
}

a:hover {
    color: #37474F;
    text-decoration: none;
}

body {
    height: 100%;
    width: 100%;
    padding: 40px;
    background: linear-gradient(45deg, #5AC8FA, #c5cae9);
    color: white;
    font-family: 'Open Sans', sans-serif;
    background-repeat: no-repeat;
    background-attachment: fixed;
}

::-moz-selection {
    background: #b3d4fc;
    text-shadow: none;
}

::selection {
    background: #b3d4fc;
    text-shadow: none;
}

hr {
    display: block;
    height: 1px;
    border: 0;
    border-top: 1px solid #ccc;
    margin: 1em 0;
    padding: 0;
}

audio,
canvas,
iframe,
img,
svg,
video {
    vertical-align: middle;
}

fieldset {
    border: 0;
    margin: 0;
    padding: 0;
}

textarea {
    resize: vertical;
}

/* ==========================================================================
   Browser Upgrade Prompt
   ========================================================================== */

.browserupgrade {
    margin: 0.2em 0;
    background: #ccc;
    color: #000;
    padding: 0.2em 0;
}

/* ==========================================================================
   Custom styles
   ========================================================================== */

h1 {
    font-family: 'Open Sans', sans-serif;
    text-transform: uppercase;
    color: white;
    font-size: 5vw;
}

#expand-wrap {
    margin-top: 10vh;
    padding:0;
    min-height:20vh;
    width: 80vw;
    margin-left: auto;
    margin-right: auto;
}

h2.expand-header{
    font-family: 'Open Sans', sans-serif;
    text-transform: uppercase;
    color: white;
    padding-bottom: 5px;
    cursor: pointer;
    font-size:3em;
    line-height:2em;
    padding:4vh 1em;
    margin:0;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

h2 a.expand-toggle {
    text-decoration:none;
    display: block;
    width: 100%;
    color: #fff;
    padding:0;
    margin:0;
    position: relative;
}
.expand-header:hover{
    background-color: rgba(55,71,79,.4);
}

h2.expand-toggled{
    background-color: #b3e0f2;
}

h4.expand-header{
    font-family: 'Open Sans', sans-serif;
    text-transform: uppercase;
    color: white;
    padding-bottom: 5px;
    cursor: pointer;
    font-size:2em;
    line-height:2em;
    padding:4vh 1em;
    margin:0;
    box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);
}

h4 a.expand-toggle {
    text-decoration:none;
    display: block;
    width: 100%;
    color: #fff;
    padding:0;
    margin:0;
    position: relative;
}

h4.expand-toggled{
    background-color: #b3e0f2;
}

/* bar animation */
@-webkit-keyframes bars {
    0% {
        width: 0px;
    }
    100% {
        width: 100%;
    }
}

.container {
    width: 100%;
    margin: 0 auto;
    padding: 0;
}

.bar {
    position: relative;
    height: 50px;
    font-size: 16px;
    line-height: 30px;
    color: #fff;
    /*   box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); */
}
.bar:hover {
    background: rgba(55,71,79,.4);
}

.bar + .bar {
    margin-top: 10px;
}

.bar:before {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: -2;
    width: 100%;
    background: #bbdefb;
    content: '';
}
.bar:after {
    position: absolute;
    top: 0;
    bottom: 0;
    z-index: -1;
    width: 100%;
    display: block;
    content: '';
    background-color: rgba(55,71,79,.4);
    transition: 0.7s;
    -webkit-animation: bars 1 1.8s;
}

.bar:last-child {
    margin-bottom: 20px;
}

#html::after {
    max-width: 95%;
}

#next::after {
    max-width: 5%;
}

#canvas::after {
    max-width: 70%;
}

#css::after {
    max-width: 90%;
}

#boot::after {
    max-width: 80%;
}

#material::after {
    max-width: 90%;
}

#js::after {
    max-width: 85%;
}

#typescript::after {
    max-width: 85%;
}

#jq::after {
    max-width: 50%;
}

#python::after {
    max-width: 60%;
}

#git::after {
    max-width: 90%;
}

#command::after {
    max-width: 60%;
}

#react::after {
    max-width: 90%;
}

#serverless::after {
    max-width: 75%;
}

#aws::after {
    max-width: 80%;
}

#vue::after {
    max-width: 30%;
}

#django::after {
    max-width: 20%;
}

#scss::after {
    max-width: 80%;
}

#node::after {
    max-width: 75%;
}

#native::after {
    max-width: 0%;
}

#docs::after {
    max-width: 100%;
}

#static::after {
    max-width: 100%;
}

#complex::after {
    max-width: 100%;
}

#webapp::after {
    max-width: 90%;
}

#backend::after {
    max-width: 75%;
}

#facebook::after {
    max-width: 70%;
}

#startups::after {
    max-width: 70%;
}

#speaking::after {
    max-width: 60%;
}

#entre::after {
    max-width: 90%;
}

#lean::after {
    max-width: 80%;
}

#photoshop::after {
    max-width: 90%;
}

#comm::after {
    max-width: 100%;
}

#kungfu::after {
    max-width: 70%;
}

.bar h4 {
    padding-top: 8px;
    padding-left: 10px;
}

#use-daily {
    opacity: .8;
}

#future {
    opacity: .5;
}


.spacer {
    margin-top: 5vh;
}

/* octocat! */

github-corner:hover .octo-arm {
    animation: octocat-wave 560ms ease-in-out;
}
@keyframes octocat-wave {
    0%,
    100% {
        transform: rotate(0);
    }
    20%,
    60% {
        transform: rotate(-25deg);
    }
    40%,
    80% {
        transform: rotate(10deg);
    }
}
@media (max-width: 500px) {
    .github-corner:hover .octo-arm {
        animation: none;
    }
    .github-corner .octo-arm {
        animation: octocat-wave 560ms ease-in-out;
    }
}


/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
    display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
    border: 0;
    clip: rect(0 0 0 0);
    -webkit-clip-path: inset(50%);
    clip-path: inset(50%);
    height: 1px;
    margin: -1px;
    overflow: hidden;
    padding: 0;
    position: absolute;
    width: 1px;
    white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
    clip: auto;
    -webkit-clip-path: none;
    clip-path: none;
    height: auto;
    margin: 0;
    overflow: visible;
    position: static;
    width: auto;
    white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
    visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
    content: " "; /* 1 */
    display: table; /* 2 */
}

.clearfix:after {
    clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
    /* Style adjustments for viewports that meet the condition */
}

@media print,
       (-webkit-min-device-pixel-ratio: 1.25),
       (min-resolution: 1.25dppx),
       (min-resolution: 120dpi) {
    /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   http://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {
    *,
    *:before,
    *:after {
        background: transparent !important;
        color: #000 !important; /* Black prints faster:
                                   http://www.sanbeiji.com/archives/953 */
        box-shadow: none !important;
        text-shadow: none !important;
    }

    a,
    a:visited {
        text-decoration: underline;
    }

    a[href]:after {
        content: " (" attr(href) ")";
    }

    abbr[title]:after {
        content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

    a[href^="#"]:after,
    a[href^="javascript:"]:after {
        content: "";
    }

    pre {
        white-space: pre-wrap !important;
    }
    pre,
    blockquote {
        border: 1px solid #999;
        page-break-inside: avoid;
    }

    /*
     * Printing Tables:
     * http://css-discuss.incutio.com/wiki/Printing_Tables
     */

    thead {
        display: table-header-group;
    }

    tr,
    img {
        page-break-inside: avoid;
    }

    p,
    h2,
    h3 {
        orphans: 3;
        widows: 3;
    }

    h2,
    h3 {
        page-break-after: avoid;
    }
}
